package gui;

import java.awt.FlowLayout;
import java.awt.GridLayout;
import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;
import java.awt.event.WindowAdapter;
import java.awt.event.WindowEvent;

import javax.swing.JButton;
import javax.swing.JFrame;
import javax.swing.JOptionPane;
import javax.swing.JPanel;
import javax.swing.JTextField;

import temp.ClientTest;
import utility.UtilityClass;

public class WelcomeScreen {

	
	public String ipAddress;
	public int portAddress;
	private JFrame mainFrame;
	
	private JPanel localPanel;
	private JPanel clientPanel;
	private JPanel serverPanel;
	
	public WelcomeScreen(){
		prepareGUI();
	}

	private void prepareGUI() {
		
		mainFrame = new JFrame("Welcome");
		mainFrame.setSize(400,600);
		mainFrame.setLayout(new GridLayout(3, 1));
		mainFrame.addWindowListener(new WindowAdapter() {
		public void windowClosing(WindowEvent windowEvent){
			System.exit(0);
		}
		});
		
			
		localPanel = new JPanel();
		localPanel.setLayout(new FlowLayout());
		
		clientPanel = new JPanel();
		clientPanel.setLayout(new FlowLayout());
		
		serverPanel = new JPanel();
		serverPanel.setLayout(new FlowLayout());
		
	}
	
	// Called in MainProgram
		public void showWelcomeScreen() {
			
			// Text field
			final JTextField ipTextField = new JTextField(5);
			final JTextField portTextField = new JTextField(5);
			
			// Buttons
			JButton localButton = new JButton("Local");
			JButton clientButton = new JButton("Client");
			JButton serverButton = new JButton("Server");
			
			
			
			// Listeners
			
			// Local pressed
			localButton.addActionListener(new ActionListener() {
				
				public void actionPerformed(ActionEvent e){
					// Launch Local
				}
			});
			
			
			// Client pressed
			clientButton.addActionListener(new ActionListener() {
				
				public void actionPerformed(ActionEvent e){
					
					ipAddress = ipTextField.getText();
					
					if(!(UtilityClass.isIPAddressValid(ipAddress))){
						JOptionPane.showMessageDialog(null, "IP address is not valid.", "Bad input",  JOptionPane.ERROR_MESSAGE);
						return;
						
					}else{
						
						try{
							portAddress = Integer.parseInt(portTextField.getText());
							// Launch Client with IP of host
							ClientTest.main(ipAddress, portAddress); 
						}catch (NumberFormatException ex){
							JOptionPane.showMessageDialog(null, "port-field must be integer between 1 and xxx", "Bad input",  JOptionPane.ERROR_MESSAGE);
							return;
						}
					}
				}
			});
			
			
			// Server pressed
			serverButton.addActionListener(new ActionListener() {
				
				public void actionPerformed(ActionEvent e){
					// Launch server
				}
			});
			
			
			
			
			// Add content to panels
			localPanel.add(localButton);
			clientPanel.add(ipTextField);
			clientPanel.add("port" + portTextField);
			clientPanel.add(clientButton);
			serverPanel.add(serverButton);
			
			mainFrame.add(localPanel);
			mainFrame.add(clientPanel);
			mainFrame.add(serverPanel);
			
			mainFrame.setVisible(true);
			
		}
				  
	
}
